/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Wykres1;

import com.orsoncharts.plot.PiePlot3D;
import java.awt.BorderLayout;
import java.awt.Rectangle;
import static java.awt.SystemColor.text;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;
import javax.swing.text.Document;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author jaroslaw.ziolkowski
 */
public class WykresKolowy extends javax.swing.JFrame {

    public JFreeChart chartJarekCopy;  // Twozenie obiektu referencji

    /**
     * Creates new form WykresKolowy
     */
    public WykresKolowy() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ButtonOne = new javax.swing.JButton();
        canvas1 = new java.awt.Canvas();
        panel1 = new java.awt.Panel();
        SaveChart = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ButtonOne.setText("Generuj wykres");
        ButtonOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonOneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 412, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        SaveChart.setText("Zapisz wykres");
        SaveChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveChartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(172, Short.MAX_VALUE)
                .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ButtonOne, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SaveChart, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(297, Short.MAX_VALUE)
                .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(170, 170, 170))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonOne)
                    .addComponent(SaveChart))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonOneActionPerformed

        DefaultPieDataset pieDataset = new DefaultPieDataset();
        pieDataset.setValue("Azizjan", new Integer(20));
        pieDataset.setValue("Leyla", new Integer(19));
        pieDataset.setValue("Lola", new Integer(18));
        pieDataset.setValue("Janara", new Integer(17));
        pieDataset.setValue("Konstantin", new Integer(26));

        JFreeChart chartJarek = ChartFactory.createPieChart3D("Title", pieDataset, true, true, true);
        chartJarekCopy = chartJarek;

        // ChartFrame frame = new ChartFrame("Pie chart",chart);
        // frame.setVisible(true);
        // frame.setSize(400, 400);
        //=============== Displays chart in main panel ==============
        ChartPanel p = new ChartPanel(chartJarek);
        p.setSize(panel1.getWidth(), panel1.getHeight());
        p.setVisible(true);
        panel1.add(p);
        panel1.repaint();

        //=============================
        //================= Save chart to PNG ========================
        File imageFile = new File("C:\\LineChart.png");
        int width = 960;
        int height = 720;
        try {
            ChartUtilities.saveChartAsPNG(imageFile, chartJarek, width, height);
        } catch (IOException ex) {
            System.err.println(ex);
        }

        //==============================================================

    }//GEN-LAST:event_ButtonOneActionPerformed

    private void SaveChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveChartActionPerformed

        // ============= Set path to save chart ===================================        
        JFileChooser chooserOne = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        String filename = JOptionPane.showInputDialog("Name this file");
        chooserOne.setSelectedFile(new File(filename + ".png"));
        BufferedWriter writer;
        int returnValue = chooserOne.showSaveDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooserOne.getSelectedFile();
            System.out.println(selectedFile.getAbsolutePath());
            String my = selectedFile.getAbsolutePath();

            //===================== Zapisywanie pliku =========================            
                File imageFile = new File(my);
                int width = 960;
                int height = 720;
                try {
                    ChartUtilities.saveChartAsPNG(imageFile, chartJarekCopy, width, height);
                    JOptionPane.showMessageDialog(null, "Plik został zapisany", "", JOptionPane.INFORMATION_MESSAGE);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Plik został zapisany bez wykresu", "UWAGA !!!", JOptionPane.INFORMATION_MESSAGE);
                    System.err.println(e);
                    
                }
                // ==============                
        }
        // ========================================================================
    }//GEN-LAST:event_SaveChartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WykresKolowy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WykresKolowy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WykresKolowy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WykresKolowy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WykresKolowy().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonOne;
    private javax.swing.JButton SaveChart;
    private java.awt.Canvas canvas1;
    private java.awt.Panel panel1;
    // End of variables declaration//GEN-END:variables
}
